{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCSS\\\\scss\\\\src\\\\Offcanvas\\\\OffcanvasReact.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Offcanvas } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OffcanvasReact() {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Offcanvas\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      className: \"me-2\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OffcanvasReact, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = OffcanvasReact;\nexport default OffcanvasReact;\n\nvar _c;\n\n$RefreshReg$(_c, \"OffcanvasReact\");","map":{"version":3,"names":["React","Offcanvas","useState","OffcanvasReact","show","setShow","handleClose","handleShow","name","props"],"sources":["D:/SCSS/scss/src/Offcanvas/OffcanvasReact.js"],"sourcesContent":["import React from 'react'\r\nimport { Offcanvas } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n\r\nfunction OffcanvasReact() {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <div className='Offcanvas'>\r\n            <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\r\n                {name}\r\n            </Button>\r\n            <Offcanvas show={show} onHide={handleClose} {...props}>\r\n                <Offcanvas.Header closeButton>\r\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n                <Offcanvas.Body>\r\n                    Some text as placeholder. In real life you can have the elements you\r\n                    have chosen. Like, text, images, lists, etc.\r\n                </Offcanvas.Body>\r\n            </Offcanvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OffcanvasReact"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,cAAT,GAA0B;EAAA;;EAEtB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,KAAD,CAAhC;;EAEA,MAAMI,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;EACA,MAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;EAEA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI,QAAC,MAAD;MAAQ,OAAO,EAAC,SAAhB;MAA0B,OAAO,EAAEE,UAAnC;MAA+C,SAAS,EAAC,MAAzD;MAAA,UACKC;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eAII,QAAC,SAAD;MAAW,IAAI,EAAEJ,IAAjB;MAAuB,MAAM,EAAEE,WAA/B;MAAA,GAAgDG,KAAhD;MAAA,wBACI,QAAC,SAAD,CAAW,MAAX;QAAkB,WAAW,MAA7B;QAAA,uBACI,QAAC,SAAD,CAAW,KAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII,QAAC,SAAD,CAAW,IAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GAvBQN,c;;KAAAA,c;AAyBT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}