{"ast":null,"code":"var _jsxFileName = \"D:\\\\SCSS\\\\scss\\\\src\\\\ButtonLoading\\\\ButtonLoading.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 500));\n}\n\nfunction ButtonLoading() {\n  _s();\n\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n  const handleClick = () => setLoading(true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ButtonLoading\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      disabled: isLoading,\n      onClick: !isLoading ? handleClick : null,\n      children: isLoading ? 'Loading…' : 'Click to load'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ButtonLoading, \"LHJkidtbt8bk0SOCXf2Y2viet6g=\");\n\n_c = ButtonLoading;\nexport default ButtonLoading;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonLoading\");","map":{"version":3,"names":["React","useState","useEffect","Button","simulateNetworkRequest","Promise","resolve","setTimeout","ButtonLoading","isLoading","setLoading","then","handleClick"],"sources":["D:/SCSS/scss/src/ButtonLoading/ButtonLoading.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction simulateNetworkRequest() {\r\n    return new Promise((resolve) => setTimeout(resolve, 500));\r\n}\r\n\r\nfunction ButtonLoading() {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            simulateNetworkRequest().then(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = () => setLoading(true);\r\n    return (\r\n        <div className='ButtonLoading'>\r\n            <Button\r\n                variant=\"primary\"\r\n                disabled={isLoading}\r\n                onClick={!isLoading ? handleClick : null}\r\n            >\r\n                {isLoading ? 'Loading…' : 'Click to load'}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonLoading"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,SAASC,sBAAT,GAAkC;EAC9B,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAnC,CAAP;AACH;;AAED,SAASE,aAAT,GAAyB;EAAA;;EACrB,MAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAIO,SAAJ,EAAe;MACXL,sBAAsB,GAAGO,IAAzB,CAA8B,MAAM;QAChCD,UAAU,CAAC,KAAD,CAAV;MACH,CAFD;IAGH;EACJ,CANQ,EAMN,CAACD,SAAD,CANM,CAAT;;EAQA,MAAMG,WAAW,GAAG,MAAMF,UAAU,CAAC,IAAD,CAApC;;EACA,oBACI;IAAK,SAAS,EAAC,eAAf;IAAA,uBACI,QAAC,MAAD;MACI,OAAO,EAAC,SADZ;MAEI,QAAQ,EAAED,SAFd;MAGI,OAAO,EAAE,CAACA,SAAD,GAAaG,WAAb,GAA2B,IAHxC;MAAA,UAKKH,SAAS,GAAG,UAAH,GAAgB;IAL9B;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;GAvBQD,a;;KAAAA,a;AAyBT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}